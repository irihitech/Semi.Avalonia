{
  "version": 3,
  "sources": ["../webapp/node_modules/native-file-system-adapter/src/config.js", "../webapp/node_modules/native-file-system-adapter/src/adapters/memory.js", "../webapp/node_modules/native-file-system-adapter/src/adapters/sandbox.js", "../webapp/node_modules/native-file-system-adapter/src/FileSystemHandle.js", "../webapp/node_modules/native-file-system-adapter/src/FileSystemWritableFileStream.js", "../webapp/node_modules/native-file-system-adapter/src/FileSystemFileHandle.js", "../webapp/node_modules/native-file-system-adapter/src/FileSystemDirectoryHandle.js", "../webapp/node_modules/native-file-system-adapter/src/util.js", "../webapp/node_modules/native-file-system-adapter/src/adapters/downloader.js", "../webapp/modules/storage/indexedDb.ts", "../webapp/modules/avalonia/caretHelper.ts", "../webapp/modules/avalonia/jsExports.ts", "../webapp/modules/avalonia/input.ts", "../webapp/modules/avalonia/caniuse.ts", "../webapp/modules/avalonia/rendering/webRenderTarget.ts", "../webapp/modules/avalonia/rendering/webGlRenderTarget.ts", "../webapp/modules/avalonia/rendering/softwareRenderTarget.ts", "../webapp/modules/avalonia/rendering/webRenderTargetRegistry.ts", "../webapp/modules/storage/storageItem.ts", "../webapp/node_modules/native-file-system-adapter/src/showDirectoryPicker.js", "../webapp/node_modules/native-file-system-adapter/src/showOpenFilePicker.js", "../webapp/node_modules/native-file-system-adapter/src/showSaveFilePicker.js", "../webapp/node_modules/native-file-system-adapter/src/getOriginPrivateDirectory.js", "../webapp/node_modules/native-file-system-adapter/src/es6.js", "../webapp/modules/storage/storageProvider.ts"],
  "sourcesContent": ["const config = {\n  ReadableStream: globalThis.ReadableStream,\n  WritableStream: globalThis.WritableStream,\n  TransformStream: globalThis.TransformStream,\n  DOMException: globalThis.DOMException,\n  Blob: globalThis.Blob,\n  File: globalThis.File,\n}\n\nexport default config\n", "import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst { File, Blob, DOMException } = config\nconst { INVALID, GONE, MISMATCH, MOD_ERR, SYNTAX, SECURITY, DISALLOWED } = errors\n\nexport class Sink {\n\n  /**\n   * @param {FileHandle} fileHandle\n   * @param {File} file\n   */\n  constructor (fileHandle, file) {\n    this.fileHandle = fileHandle\n    this.file = file\n    this.size = file.size\n    this.position = 0\n  }\n\n  write (chunk) {\n    let file = this.file\n\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.position = chunk.position\n          if (this.size < chunk.position) {\n            this.file = new File(\n              [this.file, new ArrayBuffer(chunk.position - this.size)],\n              this.file.name,\n              this.file\n            )\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException(...SYNTAX('write requires a data argument'))\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          if (this.size < chunk.position) {\n            throw new DOMException(...INVALID)\n          }\n          this.position = chunk.position\n          return\n        } else {\n          throw new DOMException(...SYNTAX('seek requires a position argument'))\n        }\n      } else if (chunk.type === 'truncate') {\n        if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n          file = chunk.size < this.size\n            ? new File([file.slice(0, chunk.size)], file.name, file)\n            : new File([file, new Uint8Array(chunk.size - this.size)], file.name)\n\n          this.size = file.size\n          if (this.position > file.size) {\n            this.position = file.size\n          }\n          this.file = file\n          return\n        } else {\n          throw new DOMException(...SYNTAX('truncate requires a size argument'))\n        }\n      }\n    }\n\n    chunk = new Blob([chunk])\n\n    let blob = this.file\n    // Calc the head and tail fragments\n    const head = blob.slice(0, this.position)\n    const tail = blob.slice(this.position + chunk.size)\n\n    // Calc the padding\n    let padding = this.position - head.size\n    if (padding < 0) {\n      padding = 0\n    }\n    blob = new File([\n      head,\n      new Uint8Array(padding),\n      chunk,\n      tail\n    ], blob.name)\n\n    this.size = blob.size\n    this.position += chunk.size\n\n    this.file = blob\n  }\n  close () {\n    if (this.fileHandle._deleted) throw new DOMException(...GONE)\n    this.fileHandle._file = this.file\n    this.file =\n    this.position =\n    this.size = null\n    if (this.fileHandle.onclose) {\n      this.fileHandle.onclose(this.fileHandle)\n    }\n  }\n}\n\nexport class FileHandle {\n  constructor (name = '', file = new File([], name), writable = true) {\n    this._file = file\n    this.name = name\n    this.kind = 'file'\n    this._deleted = false\n    this.writable = writable\n    this.readable = true\n  }\n\n  async getFile () {\n    if (this._deleted) throw new DOMException(...GONE)\n    return this._file\n  }\n\n  async createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n    if (this._deleted) throw new DOMException(...GONE)\n\n    const file = opts.keepExistingData\n      ? await this.getFile()\n      : new File([], this.name)\n\n    return new Sink(this, file)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  async _destroy () {\n    this._deleted = true\n    this._file = null\n  }\n}\n\nexport class FolderHandle {\n\n  /** @param {string} name */\n  constructor (name, writable = true) {\n    this.name = name\n    this.kind = 'directory'\n    this._deleted = false\n    /** @type {Object.<string, (FolderHandle|FileHandle)>} */\n    this._entries = {}\n    this.writable = writable\n    this.readable = true\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    if (this._deleted) throw new DOMException(...GONE)\n    yield* Object.entries(this._entries)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getDirectoryHandle (name, opts) {\n    if (this._deleted) throw new DOMException(...GONE)\n    const entry = this._entries[name]\n    if (entry) { // entry exist\n      if (entry instanceof FileHandle) {\n        throw new DOMException(...MISMATCH)\n      } else {\n        return entry\n      }\n    } else {\n      if (opts.create) {\n        return (this._entries[name] = new FolderHandle(name))\n      } else {\n        throw new DOMException(...GONE)\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getFileHandle (name, opts) {\n    const entry = this._entries[name]\n    const isFile = entry instanceof FileHandle\n    if (entry && isFile) return entry\n    if (entry && !isFile) throw new DOMException(...MISMATCH)\n    if (!entry && !opts.create) throw new DOMException(...GONE)\n    if (!entry && opts.create) {\n      return (this._entries[name] = new FileHandle(name))\n    }\n  }\n\n  async removeEntry (name, opts) {\n    const entry = this._entries[name]\n    if (!entry) throw new DOMException(...GONE)\n    await entry._destroy(opts.recursive)\n    delete this._entries[name]\n  }\n\n  async _destroy (recursive) {\n    for (let x of Object.values(this._entries)) {\n      if (!recursive) throw new DOMException(...MOD_ERR)\n      await x._destroy(recursive)\n    }\n    this._entries = {}\n    this._deleted = true\n  }\n}\n\nconst fs = new FolderHandle('')\n\nexport default () => fs\n", "/* global Blob, DOMException */\n\nimport { errors } from '../util.js'\n\nconst { DISALLOWED } = errors\n\nclass Sink {\n  /**\n   * @param {FileWriter} writer\n   * @param {FileEntry} fileEntry\n   */\n  constructor (writer, fileEntry) {\n    this.writer = writer\n    this.fileEntry = fileEntry\n  }\n\n  /**\n   * @param {BlobPart | Object} chunk\n   */\n  async write (chunk) {\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            await new Promise((resolve, reject) => {\n              this.writer.onwriteend = resolve\n              this.writer.onerror = reject\n              this.writer.truncate(chunk.position)\n            })\n            this.writer.seek(chunk.position)\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. write requires a data argument', 'SyntaxError')\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            throw new DOMException('seeking position failed', 'InvalidStateError')\n          }\n          return\n        } else {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. seek requires a position argument', 'SyntaxError')\n        }\n      } else if (chunk.type === 'truncate') {\n        return new Promise(resolve => {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            this.writer.onwriteend = evt => resolve()\n            this.writer.truncate(chunk.size)\n          } else {\n            throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. truncate requires a size argument', 'SyntaxError')\n          }\n        })\n      }\n    }\n    await new Promise((resolve, reject) => {\n      this.writer.onwriteend = resolve\n      this.writer.onerror = reject\n      this.writer.write(new Blob([chunk]))\n    })\n  }\n\n  close () {\n    return new Promise(this.fileEntry.file.bind(this.fileEntry))\n  }\n}\n\nexport class FileHandle {\n  /** @param {FileEntry} file */\n  constructor (file, writable = true) {\n    this.file = file\n    this.kind = 'file'\n    this.writable = writable\n    this.readable = true\n  }\n\n  get name () {\n    return this.file.name\n  }\n\n  /**\n   * @param {{ file: { toURL: () => string; }; }} other\n   */\n  isSameEntry (other) {\n    return this.file.toURL() === other.file.toURL()\n  }\n\n  /** @return {Promise<File>} */\n  getFile () {\n    return new Promise(this.file.file.bind(this.file))\n  }\n\n  /** @return {Promise<Sink>} */\n  createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n\n    return new Promise((resolve, reject) =>\n      this.file.createWriter(fileWriter => {\n        if (opts.keepExistingData === false) {\n          fileWriter.onwriteend = evt => resolve(new Sink(fileWriter, this.file))\n          fileWriter.truncate(0)\n        } else {\n          resolve(new Sink(fileWriter, this.file))\n        }\n      }, reject)\n    )\n  }\n}\n\nexport class FolderHandle {\n  /** @param {DirectoryEntry} dir */\n  constructor (dir, writable = true) {\n    this.dir = dir\n    this.writable = writable\n    this.readable = true\n    this.kind = 'directory'\n    this.name = dir.name\n  }\n\n  /** @param {FolderHandle} other */\n  isSameEntry (other) {\n    return this.dir.fullPath === other.dir.fullPath\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    const reader = this.dir.createReader()\n    const entries = await new Promise(reader.readEntries.bind(reader))\n    for (const x of entries) {\n      yield [x.name, x.isFile ? new FileHandle(x, this.writable) : new FolderHandle(x, this.writable)]\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FolderHandle>}\n   */\n  getDirectoryHandle (name, opts) {\n    return new Promise((resolve, reject) => {\n      this.dir.getDirectory(name, opts, dir => {\n        resolve(new FolderHandle(dir))\n      }, reject)\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FileHandle>}\n   */\n  getFileHandle (name, opts) {\n    return new Promise((resolve, reject) =>\n      this.dir.getFile(name, opts, file => resolve(new FileHandle(file)), reject)\n    )\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ recursive: boolean; }} opts\n   */\n  async removeEntry (name, opts) {\n    /** @type {Error|FolderHandle|FileHandle} */\n    const entry = await this.getDirectoryHandle(name, { create: false }).catch(err =>\n      err.name === 'TypeMismatchError' ? this.getFileHandle(name, { create: false }) : err\n    )\n\n    if (entry instanceof Error) throw entry\n\n    return new Promise((resolve, reject) => {\n      if (entry instanceof FolderHandle) {\n        opts.recursive\n          ? entry.dir.removeRecursively(() => resolve(), reject)\n          : entry.dir.remove(() => resolve(), reject)\n      } else if (entry.file) {\n        entry.file.remove(() => resolve(), reject)\n      }\n    })\n  }\n}\n\nexport default (opts = {}) => new Promise((resolve, reject) =>\n  window.webkitRequestFileSystem(\n    opts._persistent, 0,\n    e => resolve(new FolderHandle(e.root)),\n    reject\n  )\n)\n", "const kAdapter = Symbol('adapter')\n\nclass FileSystemHandle {\n  /** @type {FileSystemHandle} */\n  [kAdapter]\n\n  /** @type {string} */\n  name\n  /** @type {('file'|'directory')} */\n  kind\n\n  /** @param {FileSystemHandle & {writable}} adapter */\n  constructor (adapter) {\n    this.kind = adapter.kind\n    this.name = adapter.name\n    this[kAdapter] = adapter\n  }\n\n  async queryPermission ({mode = 'read'} = {}) {\n    const handle = this[kAdapter]\n\n    if (handle.queryPermission) {\n      return handle.queryPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  async requestPermission ({mode = 'read'} = {}) {\n    const handle = this[kAdapter]\n    if (handle.requestPermission) {\n      return handle.requestPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  /**\n   * Attempts to remove the entry represented by handle from the underlying file system.\n   *\n   * @param {object} options\n   * @param {boolean} [options.recursive=false]\n   */\n  async remove (options = {}) {\n    await this[kAdapter].remove(options)\n  }\n\n  /**\n   * @param {FileSystemHandle} other\n   */\n  async isSameEntry (other) {\n    if (this === other) return true\n    if (\n      (!other) ||\n      (typeof other !== 'object') ||\n      (this.kind !== other.kind) ||\n      (!other[kAdapter])\n    ) return false\n    return this[kAdapter].isSameEntry(other[kAdapter])\n  }\n}\n\nObject.defineProperty(FileSystemHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nexport default FileSystemHandle\nexport { FileSystemHandle }\n", "import config from './config.js'\n\nconst { WritableStream } = config\n\nclass FileSystemWritableFileStream extends WritableStream {\n  constructor (...args) {\n    super(...args)\n\n    // Stupid Safari hack to extend native classes\n    // https://bugs.webkit.org/show_bug.cgi?id=226201\n    Object.setPrototypeOf(this, FileSystemWritableFileStream.prototype)\n\n    /** @private */\n    this._closed = false\n  }\n\n  close () {\n    this._closed = true\n    const w = this.getWriter()\n    const p = w.close()\n    w.releaseLock()\n    return p\n    // return super.close ? super.close() : this.getWriter().close()\n  }\n\n  /** @param {number} position */\n  seek (position) {\n    return this.write({ type: 'seek', position })\n  }\n\n  /** @param {number} size */\n  truncate (size) {\n    return this.write({ type: 'truncate', size })\n  }\n\n  write (data) {\n    if (this._closed) {\n      return Promise.reject(new TypeError('Cannot write to a CLOSED writable stream'))\n    }\n\n    const writer = this.getWriter()\n    const p = writer.write(data)\n    writer.releaseLock()\n    return p\n  }\n}\n\nObject.defineProperty(FileSystemWritableFileStream.prototype, Symbol.toStringTag, {\n  value: 'FileSystemWritableFileStream',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemWritableFileStream.prototype, {\n  close: { enumerable: true },\n  seek: { enumerable: true },\n  truncate: { enumerable: true },\n  write: { enumerable: true }\n})\n\nexport default FileSystemWritableFileStream\nexport { FileSystemWritableFileStream }\n", "import FileSystemHandle from './FileSystemHandle.js'\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemFileHandle extends FileSystemHandle {\n  /** @type {FileSystemFileHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param  {Object} [options={}]\n   * @param  {boolean} [options.keepExistingData]\n   * @returns {Promise<FileSystemWritableFileStream>}\n   */\n  async createWritable (options = {}) {\n    return new FileSystemWritableFileStream(\n      await this[kAdapter].createWritable(options)\n    )\n  }\n\n  /**\n   * @returns {Promise<File>}\n   */\n  async getFile () {\n    return this[kAdapter].getFile()\n  }\n}\n\nObject.defineProperty(FileSystemFileHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemFileHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemFileHandle.prototype, {\n  createWritable: { enumerable: true },\n  getFile: { enumerable: true }\n})\n\nexport default FileSystemFileHandle\nexport { FileSystemFileHandle }\n", "import FileSystemHandle from './FileSystemHandle.js'\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemDirectoryHandle extends FileSystemHandle {\n  /** @type {FileSystemDirectoryHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param {string} name Name of the directory\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the directory if don't exist\n   * @returns {Promise<FileSystemDirectoryHandle>}\n   */\n  async getDirectoryHandle (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getDirectoryHandle(name, options)\n    return new FileSystemDirectoryHandle(handle)\n  }\n\n  /** @returns {AsyncGenerator<[string, FileSystemHandle | FileSystemDirectoryHandle]>} */\n  async * entries () {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n\n    for await (const [_, entry] of this[kAdapter].entries())\n      yield [entry.name, entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)]\n  }\n\n  /** @deprecated use .entries() instead */\n  async * getEntries() {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n    console.warn('deprecated, use .entries() instead')\n    for await (let entry of this[kAdapter].entries())\n      yield entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)\n  }\n\n  /**\n   * @param {string} name Name of the file\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the file if don't exist\n   */\n  async getFileHandle (name, options = {}) {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n    if (name === '') throw new TypeError(`Name can't be an empty string.`)\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getFileHandle(name, options)\n    return new FileSystemFileHandle(handle)\n  }\n\n  /**\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.recursive]\n   */\n  async removeEntry (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.recursive = !!options.recursive // cuz node's fs.rm require boolean\n    return this[kAdapter].removeEntry(name, options)\n  }\n\n  async resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  async * keys () {\n    for await (const [name] of this[kAdapter].entries())\n      yield name\n  }\n\n  async * values () {\n    for await (const [_, entry] of this)\n      yield entry\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.entries()\n  }\n}\n\nObject.defineProperty(FileSystemDirectoryHandle.prototype, Symbol.toStringTag, {\n\tvalue: 'FileSystemDirectoryHandle',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n})\n\nObject.defineProperties(FileSystemDirectoryHandle.prototype, {\n\tgetDirectoryHandle: { enumerable: true },\n\tentries: { enumerable: true },\n\tgetFileHandle: { enumerable: true },\n\tremoveEntry: { enumerable: true }\n})\n\nexport default FileSystemDirectoryHandle\nexport { FileSystemDirectoryHandle }\n", "export const errors = {\n  INVALID: ['seeking position failed.', 'InvalidStateError'],\n  GONE: ['A requested file or directory could not be found at the time an operation was processed.', 'NotFoundError'],\n  MISMATCH: ['The path supplied exists, but was not an entry of requested type.', 'TypeMismatchError'],\n  MOD_ERR: ['The object can not be modified in this way.', 'InvalidModificationError'],\n  SYNTAX: m => [`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`, 'SyntaxError'],\n  SECURITY: ['It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.', 'SecurityError'],\n  DISALLOWED: ['The request is not allowed by the user agent or the platform in the current context.', 'NotAllowedError']\n}\n\nexport const config = {\n  writable: globalThis.WritableStream\n}\n\nexport async function fromDataTransfer (entries) {\n  console.warn('deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead')\n  const [memory, sandbox, fs] = await Promise.all([\n    import('./adapters/memory.js'),\n    import('./adapters/sandbox.js'),\n    import('./FileSystemDirectoryHandle.js')\n  ])\n\n  const folder = new memory.FolderHandle('', false)\n  folder._entries = entries.map(entry => entry.isFile\n    ? new sandbox.FileHandle(entry, false)\n    : new sandbox.FolderHandle(entry, false)\n  )\n\n  return new fs.FileSystemDirectoryHandle(folder)\n}\n\nexport async function getDirHandlesFromInput (input) {\n  const { FolderHandle, FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemDirectoryHandle } = await import('./FileSystemDirectoryHandle.js')\n\n  const files = Array.from(input.files)\n  const rootName = files[0].webkitRelativePath.split('/', 1)[0]\n  const root = new FolderHandle(rootName, false)\n\n  files.forEach(file => {\n    const path = file.webkitRelativePath.split('/')\n    path.shift()\n    const name = path.pop()\n\n    const dir = path.reduce((dir, path) => {\n      if (!dir._entries[path]) dir._entries[path] = new FolderHandle(path, false)\n      return dir._entries[path]\n    }, root)\n\n    dir._entries[name] = new FileHandle(file.name, file, false)\n  })\n\n  return new FileSystemDirectoryHandle(root)\n}\n\nexport async function getFileHandlesFromInput (input) {\n  const { FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n\n  return Array.from(input.files).map(file =>\n    new FileSystemFileHandle(new FileHandle(file.name, file, false))\n  )\n}\n", "import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst {\n  WritableStream,\n  TransformStream,\n  DOMException,\n  Blob\n} = config\n\nconst { GONE } = errors\n// @ts-ignore\nconst isSafari = /constructor/i.test(window.HTMLElement) || window.safari || window.WebKitPoint\n\nexport class FileHandle {\n  constructor (name = 'unkown') {\n    this.name = name\n    this.kind = 'file'\n  }\n\n  async getFile () {\n    throw new DOMException(...GONE)\n  }\n\n  async isSameEntry(other) {\n    return this === other\n  }\n\n  /**\n   * @param {object} [options={}]\n   */\n  async createWritable (options = {}) {\n    const sw = await navigator.serviceWorker?.getRegistration()\n    const link = document.createElement('a')\n    const ts = new TransformStream()\n    const sink = ts.writable\n\n    link.download = this.name\n\n    if (isSafari || !sw) {\n      /** @type {Blob[]} */\n      let chunks = []\n      ts.readable.pipeTo(new WritableStream({\n        write (chunk) {\n          chunks.push(new Blob([chunk]))\n        },\n        close () {\n          const blob = new Blob(chunks, { type: 'application/octet-stream; charset=utf-8' })\n          chunks = []\n          link.href = URL.createObjectURL(blob)\n          link.click()\n          setTimeout(() => URL.revokeObjectURL(link.href), 10000)\n        }\n      }))\n    } else {\n      const { writable, readablePort } = new RemoteWritableStream(WritableStream)\n      // Make filename RFC5987 compatible\n      const fileName = encodeURIComponent(this.name).replace(/['()]/g, escape).replace(/\\*/g, '%2A')\n      const headers = {\n        'content-disposition': \"attachment; filename*=UTF-8''\" + fileName,\n        'content-type': 'application/octet-stream; charset=utf-8',\n        ...(options.size ? { 'content-length': options.size } : {})\n      }\n\n      const keepAlive = setTimeout(() => sw.active.postMessage(0), 10000)\n\n      ts.readable.pipeThrough(new TransformStream({\n        transform (chunk, ctrl) {\n          if (chunk instanceof Uint8Array) return ctrl.enqueue(chunk)\n          const reader = new Response(chunk).body.getReader()\n          const pump = _ => reader.read().then(e => e.done ? 0 : pump(ctrl.enqueue(e.value)))\n          return pump()\n        }\n      })).pipeTo(writable).finally(() => {\n        clearInterval(keepAlive)\n      })\n\n      // Transfer the stream to service worker\n      sw.active.postMessage({\n        url: sw.scope + fileName,\n        headers,\n        readablePort\n      }, [readablePort])\n\n      // Trigger the download with a hidden iframe\n      const iframe = document.createElement('iframe')\n      iframe.hidden = true\n      iframe.src = sw.scope + fileName\n      document.body.appendChild(iframe)\n    }\n\n    return sink.getWriter()\n  }\n}\n\nconst WRITE = 0\nconst PULL = 0\nconst ERROR = 1\nconst ABORT = 1\nconst CLOSE = 2\n\nclass MessagePortSink {\n  /** @param {MessagePort} port */\n  constructor (port) {\n    port.onmessage = event => this._onMessage(event.data)\n    this._port = port\n    this._resetReady()\n  }\n\n  start (controller) {\n    this._controller = controller\n    // Apply initial backpressure\n    return this._readyPromise\n  }\n\n  write (chunk) {\n    const message = { type: WRITE, chunk }\n\n    // Send chunk\n    this._port.postMessage(message, [chunk.buffer])\n\n    // Assume backpressure after every write, until sender pulls\n    this._resetReady()\n\n    // Apply backpressure\n    return this._readyPromise\n  }\n\n  close () {\n    this._port.postMessage({ type: CLOSE })\n    this._port.close()\n  }\n\n  abort (reason) {\n    this._port.postMessage({ type: ABORT, reason })\n    this._port.close()\n  }\n\n  _onMessage (message) {\n    if (message.type === PULL) this._resolveReady()\n    if (message.type === ERROR) this._onError(message.reason)\n  }\n\n  _onError (reason) {\n    this._controller.error(reason)\n    this._rejectReady(reason)\n    this._port.close()\n  }\n\n  _resetReady () {\n    this._readyPromise = new Promise((resolve, reject) => {\n      this._readyResolve = resolve\n      this._readyReject = reject\n    })\n    this._readyPending = true\n  }\n\n  _resolveReady () {\n    this._readyResolve()\n    this._readyPending = false\n  }\n\n  _rejectReady (reason) {\n    if (!this._readyPending) this._resetReady()\n    this._readyPromise.catch(() => {})\n    this._readyReject(reason)\n    this._readyPending = false\n  }\n}\n\nclass RemoteWritableStream {\n  constructor (WritableStream) {\n    const channel = new MessageChannel()\n    this.readablePort = channel.port1\n    this.writable = new WritableStream(\n      new MessagePortSink(channel.port2)\n    )\n  }\n}\n", "class InnerDbConnection {\r\n    constructor(private readonly database: IDBDatabase) { }\r\n\r\n    private openStore(store: string, mode: IDBTransactionMode): IDBObjectStore {\r\n        const tx = this.database.transaction(store, mode);\r\n        return tx.objectStore(store);\r\n    }\r\n\r\n    public async put(store: string, obj: any, key?: IDBValidKey): Promise<IDBValidKey> {\r\n        const os = this.openStore(store, \"readwrite\");\r\n\r\n        return await new Promise((resolve, reject) => {\r\n            const response = os.put(obj, key);\r\n            response.onsuccess = () => {\r\n                resolve(response.result);\r\n            };\r\n            response.onerror = () => {\r\n                reject(response.error);\r\n            };\r\n        });\r\n    }\r\n\r\n    public get(store: string, key: IDBValidKey): any {\r\n        const os = this.openStore(store, \"readonly\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const response = os.get(key);\r\n            response.onsuccess = () => {\r\n                resolve(response.result);\r\n            };\r\n            response.onerror = () => {\r\n                reject(response.error);\r\n            };\r\n        });\r\n    }\r\n\r\n    public async delete(store: string, key: IDBValidKey): Promise<void> {\r\n        const os = this.openStore(store, \"readwrite\");\r\n\r\n        return await new Promise((resolve, reject) => {\r\n            const response = os.delete(key);\r\n            response.onsuccess = () => {\r\n                resolve();\r\n            };\r\n            response.onerror = () => {\r\n                reject(response.error);\r\n            };\r\n        });\r\n    }\r\n\r\n    public close() {\r\n        this.database.close();\r\n    }\r\n}\r\n\r\nclass IndexedDbWrapper {\r\n    constructor(private readonly databaseName: string, private readonly objectStores: [string]) {\r\n    }\r\n\r\n    public async connect(): Promise<InnerDbConnection> {\r\n        const conn = window.indexedDB.open(this.databaseName, 1);\r\n\r\n        conn.onupgradeneeded = event => {\r\n            const db = (event.target as IDBRequest<IDBDatabase>).result;\r\n            this.objectStores.forEach(store => {\r\n                db.createObjectStore(store);\r\n            });\r\n        };\r\n\r\n        return await new Promise((resolve, reject) => {\r\n            conn.onsuccess = event => {\r\n                resolve(new InnerDbConnection((event.target as IDBRequest<IDBDatabase>).result));\r\n            };\r\n            conn.onerror = event => {\r\n                reject((event.target as IDBRequest<IDBDatabase>).error);\r\n            };\r\n        });\r\n    }\r\n}\r\n\r\nexport const fileBookmarksStore: string = \"fileBookmarks\";\r\nexport const avaloniaDb = new IndexedDbWrapper(\"AvaloniaDb\", [\r\n    fileBookmarksStore\r\n]);\r\n", "// Based on https://github.com/component/textarea-caret-position/blob/master/index.js\r\nexport class CaretHelper {\r\n    public static getCaretCoordinates(\r\n        element: HTMLInputElement | HTMLTextAreaElement,\r\n        position: number,\r\n        options?: { debug: boolean }\r\n    ) {\r\n        if (!isBrowser) {\r\n            throw new Error(\r\n                \"textarea-caret-position#getCaretCoordinates should only be called in a browser\"\r\n            );\r\n        }\r\n\r\n        const debug = options?.debug ?? false;\r\n        if (debug) {\r\n            const el = document.querySelector(\r\n                \"#input-textarea-caret-position-mirror-div\"\r\n            );\r\n            if (el) el.parentNode?.removeChild(el);\r\n        }\r\n\r\n        // The mirror div will replicate the textarea's style\r\n        const div = document.createElement(\"div\");\r\n        div.id = \"input-textarea-caret-position-mirror-div\";\r\n        document.body.appendChild(div);\r\n\r\n        const style = div.style;\r\n        const computed = window.getComputedStyle\r\n            ? window.getComputedStyle(element)\r\n            : ((element as any).currentStyle as CSSStyleDeclaration); // currentStyle for IE < 9\r\n        const isInput = element.nodeName === \"INPUT\";\r\n\r\n        // Default textarea styles\r\n        style.whiteSpace = \"pre-wrap\";\r\n        if (!isInput) style.wordWrap = \"break-word\"; // only for textarea-s\r\n\r\n        // Position off-screen\r\n        style.position = \"absolute\"; // required to return coordinates properly\r\n        if (!debug) style.visibility = \"hidden\"; // not 'display: none' because we want rendering\r\n\r\n        // Transfer the element's properties to the div\r\n        properties.forEach((prop: string) => {\r\n            if (isInput && prop === \"lineHeight\") {\r\n                // Special case for <input>s because text is rendered centered and line height may be != height\r\n                if (computed.boxSizing === \"border-box\") {\r\n                    const height = parseInt(computed.height);\r\n                    const outerHeight =\r\n                        parseInt(computed.paddingTop) +\r\n                        parseInt(computed.paddingBottom) +\r\n                        parseInt(computed.borderTopWidth) +\r\n                        parseInt(computed.borderBottomWidth);\r\n                    const targetHeight = outerHeight + parseInt(computed.lineHeight);\r\n                    if (height > targetHeight) {\r\n                        style.lineHeight = `${height - outerHeight}px`;\r\n                    } else if (height === targetHeight) {\r\n                        style.lineHeight = computed.lineHeight;\r\n                    } else {\r\n                        style.lineHeight = \"0\";\r\n                    }\r\n                } else {\r\n                    style.lineHeight = computed.height;\r\n                }\r\n            } else {\r\n                (style as any)[prop] = (computed as any)[prop];\r\n            }\r\n        });\r\n\r\n        if (isFirefox) {\r\n            // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\r\n            if (element.scrollHeight > parseInt(computed.height)) {\r\n                style.overflowY = \"scroll\";\r\n            }\r\n        } else {\r\n            style.overflow = \"hidden\"; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\r\n        }\r\n\r\n        div.textContent = element.value.substring(0, position);\r\n        // The second special handling for input type=\"text\" vs textarea:\r\n        // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\r\n        if (isInput) div.textContent = div.textContent.replace(/\\s/g, \"\\u00a0\");\r\n\r\n        const span = document.createElement(\"span\");\r\n        // Wrapping must be replicated *exactly*, including when a long word gets\r\n        // onto the next line, with whitespace at the end of the line before (#7).\r\n        // The  *only* reliable way to do that is to copy the *entire* rest of the\r\n        // textarea's content into the <span> created at the caret position.\r\n        // For inputs, just '.' would be enough, but no need to bother.\r\n        span.textContent = element.value.substring(position) || \".\"; // || because a completely empty faux span doesn't render at all\r\n        div.appendChild(span);\r\n\r\n        const coordinates = {\r\n            top: span.offsetTop + parseInt(computed.borderTopWidth),\r\n            left: span.offsetLeft + parseInt(computed.borderLeftWidth),\r\n            height: parseInt(computed.lineHeight)\r\n        };\r\n\r\n        if (debug) {\r\n            span.style.backgroundColor = \"#aaa\";\r\n        } else {\r\n            document.body.removeChild(div);\r\n        }\r\n\r\n        return coordinates;\r\n    }\r\n}\r\n\r\nconst properties = [\r\n    \"direction\", // RTL support\r\n    \"boxSizing\",\r\n    \"width\", // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\r\n    \"height\",\r\n    \"overflowX\",\r\n    \"overflowY\", // copy the scrollbar for IE\r\n\r\n    \"borderTopWidth\",\r\n    \"borderRightWidth\",\r\n    \"borderBottomWidth\",\r\n    \"borderLeftWidth\",\r\n    \"borderStyle\",\r\n\r\n    \"paddingTop\",\r\n    \"paddingRight\",\r\n    \"paddingBottom\",\r\n    \"paddingLeft\",\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n    \"fontStyle\",\r\n    \"fontVariant\",\r\n    \"fontWeight\",\r\n    \"fontStretch\",\r\n    \"fontSize\",\r\n    \"fontSizeAdjust\",\r\n    \"lineHeight\",\r\n    \"fontFamily\",\r\n\r\n    \"textAlign\",\r\n    \"textTransform\",\r\n    \"textIndent\",\r\n    \"textDecoration\", // might not make a difference, but better be safe\r\n\r\n    \"letterSpacing\",\r\n    \"wordSpacing\",\r\n\r\n    \"tabSize\",\r\n    \"MozTabSize\"\r\n];\r\n\r\nconst isBrowser = typeof window !== \"undefined\";\r\nconst isFirefox = isBrowser && (window as any).mozInnerScreenX != null;\r\n", "export class JsExports {\r\n    public static resolvedExports?: any;\r\n    public static exportsPromise: Promise<any>;\r\n\r\n    public static get InputHelper(): any {\r\n        return this.resolvedExports?.Avalonia.Browser.Interop.InputHelper;\r\n    }\r\n\r\n    public static get DomHelper(): any {\r\n        return this.resolvedExports?.Avalonia.Browser.Interop.DomHelper;\r\n    }\r\n\r\n    public static get TimerHelper(): any {\r\n        return this.resolvedExports?.Avalonia.Browser.Interop.TimerHelper;\r\n    }\r\n\r\n    public static get CanvasHelper(): any {\r\n        return this.resolvedExports?.Avalonia.Browser.Interop.CanvasHelper;\r\n    }\r\n}\r\nasync function resolveExports (): Promise<any> {\r\n    const runtimeApi = await globalThis.getDotnetRuntime(0);\r\n    if (runtimeApi == null) { return; }\r\n    JsExports.resolvedExports = await runtimeApi.getAssemblyExports(\"Avalonia.Browser.dll\");\r\n    return JsExports.resolvedExports;\r\n}\r\n\r\nJsExports.exportsPromise = resolveExports();\r\n", "import { CaretHelper } from \"./caretHelper\";\r\nimport { JsExports } from \"./jsExports\";\r\nimport { IMemoryView } from \"../../types/dotnet\";\r\nimport { StorageItem } from \"../storage/storageItem\";\r\n\r\nenum RawInputModifiers {\r\n    None = 0,\r\n    Alt = 1,\r\n    Control = 2,\r\n    Shift = 4,\r\n    Meta = 8,\r\n\r\n    LeftMouseButton = 16,\r\n    RightMouseButton = 32,\r\n    MiddleMouseButton = 64,\r\n    XButton1MouseButton = 128,\r\n    XButton2MouseButton = 256,\r\n    KeyboardMask = Alt | Control | Shift | Meta,\r\n\r\n    PenInverted = 512,\r\n    PenEraser = 1024,\r\n    PenBarrelButton = 2048\r\n}\r\n\r\n/*\r\n* This is a hack to handle older Firefox (before v127 from June 2024) clipboard events in a more convenient way for framework users.\r\n* In the browser, events go in order KeyDown -> Paste -> KeyUp.\r\n* On KeyDown we trigger Avalonia handlers, which might execute readClipboard.\r\n* When readClipboard was executed, we mark ClipboardState as Pending and setup clipboard promise,\r\n* which will un-handle KeyDown event, basically allowing browser to pass a Paste event properly.\r\n* On actual Paste event we execute promise callbacks, resuming async operation, and returning pasted text to the app.\r\n* Note #1, on every KeyUp event we will reset all the state and reject pending promises if any, as this event it expected to come after Paste.\r\n* Note #2, whole this code will be executed only on older browsers where clipboard.read/readText is not available.\r\n* Note #3, with all of these hacks Clipboard.ReadText will still work only on actual \"paste\" gesture initiated by user.\r\n* */\r\nenum ClipboardState {\r\n    None,\r\n    Ready,\r\n    Pending\r\n}\r\n\r\ninterface WriteableClipboardItem {\r\n    data: Record<string, string | Blob>;\r\n}\r\n\r\ninterface WriteableClipboardSource {\r\n    items: WriteableClipboardItem[];\r\n}\r\n\r\ntype ReadableDataItem = {\r\n    type: \"clipboardItem\";\r\n    value: ClipboardItem;\r\n} | {\r\n    type: \"dataTransferItem\";\r\n    value: DataTransferItem;\r\n} | {\r\n    type: \"string\";\r\n    value: string;\r\n};\r\n\r\ntype ReadableDataValue = {\r\n    type: \"string\";\r\n    value: string;\r\n} | {\r\n    type: \"bytes\";\r\n    value: Uint8Array;\r\n} | {\r\n    type: \"file\";\r\n    value: StorageItem;\r\n};\r\n\r\nexport class InputHelper {\r\n    static clipboardState: ClipboardState = ClipboardState.None;\r\n    static resolveClipboard?: (value: readonly ReadableDataItem[]) => void;\r\n    static rejectClipboard?: (reason?: any) => void;\r\n\r\n    public static initializeBackgroundHandlers() {\r\n        if (this.clipboardState !== ClipboardState.None) {\r\n            return;\r\n        }\r\n\r\n        globalThis.document.addEventListener(\"paste\", args => {\r\n            if (this.clipboardState !== ClipboardState.Pending || !this.resolveClipboard) {\r\n                return;\r\n            }\r\n\r\n            const items = this.getDataTransferItems(args.clipboardData);\r\n            this.resolveClipboard(items.map((item) => ({ type: \"dataTransferItem\", value: item })));\r\n        });\r\n        this.clipboardState = ClipboardState.Ready;\r\n    }\r\n\r\n    private static getDataTransferItems(dataTransfer?: DataTransfer | null): DataTransferItem[] {\r\n        const dataTransferList = dataTransfer?.items;\r\n        return dataTransferList == null ? [] : Array.from(dataTransferList);\r\n    }\r\n\r\n    public static isClipboardFormatSupported(format: string): boolean {\r\n        if (ClipboardItem.supports) {\r\n            return ClipboardItem.supports(format);\r\n        }\r\n\r\n        return format === \"text/plain\" || format === \"text/html\" || format === \"image/png\";\r\n    }\r\n\r\n    public static createWriteableClipboardSource(): WriteableClipboardSource {\r\n        return { items: [] };\r\n    }\r\n\r\n    public static createWriteableClipboardItem(source: WriteableClipboardSource): WriteableClipboardItem {\r\n        const item = { data: {} };\r\n        source.items.push(item);\r\n        return item;\r\n    }\r\n\r\n    public static addStringToWriteableClipboardItem(item: WriteableClipboardItem, format: string, value: string) {\r\n        item.data[format] = value;\r\n    }\r\n\r\n    public static addBytesToWriteableClipboardItem(item: WriteableClipboardItem, format: string, value: IMemoryView) {\r\n        const bytes = value.slice(0, value.byteLength);\r\n        item.data[format] = new Blob([bytes], { type: format });\r\n    }\r\n\r\n    public static async readClipboard(window: Window): Promise<readonly ReadableDataItem[]> {\r\n        const clipboard = window.navigator.clipboard;\r\n\r\n        if (clipboard.read) {\r\n            const clipboardItems = await clipboard.read();\r\n            return clipboardItems.map((item) => ({ type: \"clipboardItem\", value: item }));\r\n        } else if (clipboard.readText) {\r\n            const item: ReadableDataItem = {\r\n                type: \"string\",\r\n                value: await clipboard.readText()\r\n            };\r\n            return [item];\r\n        } else {\r\n            try {\r\n                return await new Promise<readonly ReadableDataItem[]>((resolve, reject) => {\r\n                    this.clipboardState = ClipboardState.Pending;\r\n                    this.resolveClipboard = resolve;\r\n                    this.rejectClipboard = reject;\r\n                });\r\n            } finally {\r\n                this.clipboardState = ClipboardState.Ready;\r\n                this.resolveClipboard = undefined;\r\n                this.rejectClipboard = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static async writeClipboard(window: Window, source?: WriteableClipboardSource | null): Promise<void> {\r\n        const items = source?.items ?? [];\r\n        if (items.length === 0) {\r\n            await window.navigator.clipboard.writeText(\"\");\r\n            return;\r\n        }\r\n\r\n        return window.navigator.clipboard.write\r\n            ? await window.navigator.clipboard.write(items.map(item => new ClipboardItem(item.data)))\r\n            : await this.writeFirstText(window, items);\r\n    }\r\n\r\n    private static async writeFirstText(window: Window, items: WriteableClipboardItem[]): Promise<void> {\r\n        for (const item of items) {\r\n            for (const format in item.data) {\r\n                if (!format.startsWith(\"text/\")) {\r\n                    continue;\r\n                }\r\n\r\n                let value = item.data[format];\r\n                if (typeof value !== \"string\") {\r\n                    value = \"\";\r\n                }\r\n\r\n                await window.navigator.clipboard.writeText(value);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static getReadableDataItemFormats(item: ReadableDataItem): readonly string[] {\r\n        /* eslint-disable indent */\r\n        switch (item.type) {\r\n            case \"clipboardItem\":\r\n                return item.value.types;\r\n            case \"dataTransferItem\":\r\n                switch (item.value.kind) {\r\n                    case \"string\":\r\n                        return [item.value.type];\r\n                    case \"file\":\r\n                        return [\"Files\"];\r\n                    default:\r\n                        return [];\r\n                }\r\n            case \"string\":\r\n                return [\"text/plain\"];\r\n            default:\r\n                return [];\r\n        }\r\n        /* eslint-enable indent */\r\n    }\r\n\r\n    // Asynchronous, used to read the clipboard.\r\n    public static async tryGetReadableDataItemValueAsync(item: ReadableDataItem, format: string): Promise<ReadableDataValue | null> {\r\n        const type = item.type;\r\n\r\n        /* eslint-disable indent */\r\n        switch (type) {\r\n            case \"clipboardItem\": {\r\n                const clipboardItem = item.value;\r\n                if (!clipboardItem.types.includes(format)) {\r\n                    return null;\r\n                }\r\n\r\n                const blob = await clipboardItem.getType(format);\r\n\r\n                return format.startsWith(\"text/\")\r\n                    ? { type: \"string\", value: await blob.text() }\r\n                    : { type: \"bytes\", value: await this.getBlobBytes(blob) };\r\n            }\r\n\r\n            case \"dataTransferItem\": {\r\n                const dataTransferItem = item.value;\r\n\r\n                switch (dataTransferItem.kind) {\r\n                    case \"string\": {\r\n                        if (format !== dataTransferItem.type) {\r\n                            return null;\r\n                        }\r\n\r\n                        const stringValue = await new Promise<string>((resolve) => dataTransferItem.getAsString((str) => resolve(str)));\r\n                        return { type: \"string\", value: stringValue };\r\n                    }\r\n\r\n                    case \"file\": {\r\n                        if (format !== \"Files\") {\r\n                            return null;\r\n                        }\r\n\r\n                        const file = dataTransferItem.getAsFile();\r\n                        return file == null ? null : { type: \"file\", value: StorageItem.createFromFile(file) };\r\n                    }\r\n\r\n                    default:\r\n                        return null;\r\n                }\r\n            }\r\n\r\n            case \"string\": {\r\n                return format.startsWith(\"text/\")\r\n                    ? { type: \"string\", value: item.value }\r\n                    : { type: \"bytes\", value: await this.getBlobBytes(new Blob([item.value])) };\r\n            }\r\n\r\n            default:\r\n                return null;\r\n        }\r\n        /* eslint-enable indent */\r\n    }\r\n\r\n    // Synchronous, used only to read a drag-and-drop item.\r\n    public static tryGetReadableDataItemValue(item: ReadableDataItem, format: string): ReadableDataValue | null {\r\n        const type = item.type;\r\n\r\n        if (type !== \"dataTransferItem\") {\r\n            return null;\r\n        }\r\n\r\n        const dataTransferItem = item.value;\r\n\r\n        /* eslint-disable indent */\r\n        switch (dataTransferItem.kind) {\r\n            case \"string\": {\r\n                if (format !== dataTransferItem.type) {\r\n                    return null;\r\n                }\r\n\r\n                let stringValue = \"\";\r\n                dataTransferItem.getAsString(function (str) { stringValue = str; });\r\n                return { type: \"string\", value: stringValue };\r\n            }\r\n\r\n            case \"file\": {\r\n                if (format !== \"Files\") {\r\n                    return null;\r\n                }\r\n\r\n                const file = dataTransferItem.getAsFile();\r\n                return file == null ? null : { type: \"file\", value: StorageItem.createFromFile(file) };\r\n            }\r\n\r\n            default:\r\n                return null;\r\n        }\r\n        /* eslint-enable indent */\r\n    }\r\n\r\n    private static async getBlobBytes(blob: Blob): Promise<Uint8Array> {\r\n        return blob.bytes\r\n            ? await blob.bytes()\r\n            : new Uint8Array(await blob.arrayBuffer());\r\n    }\r\n\r\n    public static subscribeInputEvents(element: HTMLInputElement, topLevelId: number) {\r\n        const keySub = this.subscribeKeyEvents(element, topLevelId);\r\n        const pointerSub = this.subscribePointerEvents(element, topLevelId);\r\n        const textSub = this.subscribeTextEvents(element, topLevelId);\r\n        const dndSub = this.subscribeDropEvents(element, topLevelId);\r\n        const paneSub = this.subscribeKeyboardGeometryChange(element, topLevelId);\r\n\r\n        return () => {\r\n            keySub();\r\n            pointerSub();\r\n            textSub();\r\n            dndSub();\r\n            paneSub();\r\n        };\r\n    }\r\n\r\n    public static subscribeKeyEvents(element: HTMLInputElement, topLevelId: number) {\r\n        const keyDownHandler = (args: KeyboardEvent) => {\r\n            JsExports.InputHelper.OnKeyDown(topLevelId, args.code, args.key, this.getModifiers(args))\r\n                .then((handled: boolean) => {\r\n                    if (!handled || this.clipboardState !== ClipboardState.Pending) {\r\n                        args.preventDefault();\r\n                    }\r\n                });\r\n        };\r\n        element.addEventListener(\"keydown\", keyDownHandler);\r\n\r\n        const keyUpHandler = (args: KeyboardEvent) => {\r\n            JsExports.InputHelper.OnKeyUp(topLevelId, args.code, args.key, this.getModifiers(args))\r\n                .then((handled: boolean) => {\r\n                    if (!handled) {\r\n                        args.preventDefault();\r\n                    }\r\n                });\r\n\r\n            if (this.rejectClipboard) {\r\n                this.rejectClipboard();\r\n            }\r\n        };\r\n\r\n        element.addEventListener(\"keyup\", keyUpHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"keydown\", keyDownHandler);\r\n            element.removeEventListener(\"keyup\", keyUpHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribeTextEvents(\r\n        element: HTMLInputElement,\r\n        topLevelId: number) {\r\n        const compositionStartHandler = (args: CompositionEvent) => {\r\n            JsExports.InputHelper.OnCompositionStart(topLevelId);\r\n        };\r\n        element.addEventListener(\"compositionstart\", compositionStartHandler);\r\n\r\n        const beforeInputHandler = (args: InputEvent) => {\r\n            const ranges = args.getTargetRanges();\r\n            let start = -1;\r\n            let end = -1;\r\n            if (ranges.length > 0) {\r\n                start = ranges[0].startOffset;\r\n                end = ranges[0].endOffset;\r\n            }\r\n\r\n            if (args.inputType === \"insertCompositionText\") {\r\n                start = 2;\r\n                end = start + 2;\r\n            }\r\n\r\n            JsExports.InputHelper.OnBeforeInput(topLevelId, args.inputType, start, end);\r\n        };\r\n        element.addEventListener(\"beforeinput\", beforeInputHandler);\r\n\r\n        const compositionUpdateHandler = (args: CompositionEvent) => {\r\n            JsExports.InputHelper.OnCompositionUpdate(topLevelId, args.data);\r\n        };\r\n        element.addEventListener(\"compositionupdate\", compositionUpdateHandler);\r\n\r\n        const compositionEndHandler = (args: CompositionEvent) => {\r\n            JsExports.InputHelper.OnCompositionEnd(topLevelId, args.data);\r\n            args.preventDefault();\r\n        };\r\n        element.addEventListener(\"compositionend\", compositionEndHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"compositionstart\", compositionStartHandler);\r\n            element.removeEventListener(\"compositionupdate\", compositionUpdateHandler);\r\n            element.removeEventListener(\"compositionend\", compositionEndHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribePointerEvents(\r\n        element: HTMLInputElement,\r\n        topLevelId: number\r\n    ) {\r\n        const pointerMoveHandler = (args: PointerEvent) => {\r\n            JsExports.InputHelper.OnPointerMove(\r\n                topLevelId, args.pointerType, args.pointerId, args.offsetX, args.offsetY,\r\n                args.pressure, args.tiltX, args.tiltY, args.twist, this.getModifiers(args), args);\r\n            args.preventDefault();\r\n        };\r\n\r\n        const pointerDownHandler = (args: PointerEvent) => {\r\n            JsExports.InputHelper.OnPointerDown(\r\n                topLevelId, args.pointerType, args.pointerId, args.button, args.offsetX, args.offsetY,\r\n                args.pressure, args.tiltX, args.tiltY, args.twist, this.getModifiers(args));\r\n            args.preventDefault();\r\n        };\r\n\r\n        const pointerUpHandler = (args: PointerEvent) => {\r\n            JsExports.InputHelper.OnPointerUp(\r\n                topLevelId, args.pointerType, args.pointerId, args.button, args.offsetX, args.offsetY,\r\n                args.pressure, args.tiltX, args.tiltY, args.twist, this.getModifiers(args));\r\n            args.preventDefault();\r\n        };\r\n\r\n        const pointerCancelHandler = (args: PointerEvent) => {\r\n            JsExports.InputHelper.OnPointerCancel(\r\n                topLevelId, args.pointerType, args.pointerId, args.offsetX, args.offsetY,\r\n                args.pressure, args.tiltX, args.tiltY, args.twist, this.getModifiers(args));\r\n        };\r\n\r\n        const wheelHandler = (args: WheelEvent) => {\r\n            JsExports.InputHelper.OnWheel(\r\n                topLevelId, args.offsetX, args.offsetY, args.deltaX, args.deltaY, this.getModifiers(args));\r\n            args.preventDefault();\r\n        };\r\n\r\n        element.addEventListener(\"pointermove\", pointerMoveHandler);\r\n        element.addEventListener(\"pointerdown\", pointerDownHandler);\r\n        element.addEventListener(\"pointerup\", pointerUpHandler);\r\n        element.addEventListener(\"wheel\", wheelHandler);\r\n        element.addEventListener(\"pointercancel\", pointerCancelHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"pointerover\", pointerMoveHandler);\r\n            element.removeEventListener(\"pointerdown\", pointerDownHandler);\r\n            element.removeEventListener(\"pointerup\", pointerUpHandler);\r\n            element.removeEventListener(\"pointercancel\", pointerCancelHandler);\r\n            element.removeEventListener(\"wheel\", wheelHandler);\r\n        };\r\n    }\r\n\r\n    public static subscribeDropEvents(\r\n        element: HTMLInputElement,\r\n        topLevelId: number\r\n    ) {\r\n        const handler = (args: DragEvent) => {\r\n            const dataTransfer = args.dataTransfer;\r\n            if (dataTransfer == null) {\r\n                return;\r\n            }\r\n\r\n            const items: ReadableDataItem[] =\r\n                this.getDataTransferItems(dataTransfer).map((item) => ({ type: \"dataTransferItem\", value: item }));\r\n\r\n            JsExports.InputHelper.OnDragDrop(topLevelId, args.type, args.offsetX, args.offsetY, this.getModifiers(args), dataTransfer, items);\r\n        };\r\n        const overAndDropHandler = (args: DragEvent) => {\r\n            args.preventDefault();\r\n            handler(args);\r\n        };\r\n        element.addEventListener(\"dragover\", overAndDropHandler);\r\n        element.addEventListener(\"dragenter\", handler);\r\n        element.addEventListener(\"dragleave\", handler);\r\n        element.addEventListener(\"drop\", overAndDropHandler);\r\n\r\n        return () => {\r\n            element.removeEventListener(\"dragover\", overAndDropHandler);\r\n            element.removeEventListener(\"dragenter\", handler);\r\n            element.removeEventListener(\"dragleave\", handler);\r\n            element.removeEventListener(\"drop\", overAndDropHandler);\r\n        };\r\n    }\r\n\r\n    public static getCoalescedEvents(pointerEvent: PointerEvent): number[] {\r\n        return pointerEvent.getCoalescedEvents()\r\n            .flatMap(e => [e.offsetX, e.offsetY, e.pressure, e.tiltX, e.tiltY, e.twist]);\r\n    }\r\n\r\n    public static subscribeKeyboardGeometryChange(\r\n        element: HTMLInputElement,\r\n        topLevelId: number) {\r\n        if (\"virtualKeyboard\" in navigator) {\r\n            // (navigator as any).virtualKeyboard.overlaysContent = true;\r\n            const listener = (event: any) => {\r\n                const elementRect = element.getBoundingClientRect();\r\n                const keyboardRect = event.target.boundingRect as DOMRect;\r\n\r\n                JsExports.InputHelper.OnKeyboardGeometryChange(\r\n                    topLevelId,\r\n                    keyboardRect.x - elementRect.x,\r\n                    keyboardRect.y - elementRect.y,\r\n                    keyboardRect.width,\r\n                    keyboardRect.height);\r\n            };\r\n            (navigator as any).virtualKeyboard.addEventListener(\"geometrychange\", listener);\r\n            return () => {\r\n                (navigator as any).virtualKeyboard.removeEventListener(\"geometrychange\", listener);\r\n            };\r\n        }\r\n\r\n        return () => {};\r\n    }\r\n\r\n    public static clearInput(inputElement: HTMLInputElement) {\r\n        inputElement.value = \"\";\r\n    }\r\n\r\n    public static focusElement(inputElement: HTMLElement) {\r\n        inputElement.focus();\r\n    }\r\n\r\n    public static setCursor(inputElement: HTMLInputElement, kind: string) {\r\n        if (kind === \"default\") {\r\n            inputElement.style.removeProperty(\"cursor\");\r\n        } else {\r\n            inputElement.style.cursor = kind;\r\n        }\r\n    }\r\n\r\n    public static setBounds(inputElement: HTMLInputElement, x: number, y: number, caretWidth: number, caretHeight: number, caret: number) {\r\n        inputElement.style.left = (x).toFixed(0) + \"px\";\r\n        inputElement.style.top = (y).toFixed(0) + \"px\";\r\n\r\n        const { left, top } = CaretHelper.getCaretCoordinates(inputElement, caret);\r\n\r\n        inputElement.style.left = (x - left).toFixed(0) + \"px\";\r\n        inputElement.style.top = (y - top).toFixed(0) + \"px\";\r\n    }\r\n\r\n    public static hide(inputElement: HTMLInputElement) {\r\n        inputElement.style.display = \"none\";\r\n    }\r\n\r\n    public static show(inputElement: HTMLInputElement) {\r\n        inputElement.style.display = \"block\";\r\n    }\r\n\r\n    public static setSurroundingText(inputElement: HTMLInputElement, text: string, start: number, end: number) {\r\n        if (!inputElement) {\r\n            return;\r\n        }\r\n\r\n        inputElement.value = text;\r\n        inputElement.setSelectionRange(start, end);\r\n        inputElement.style.width = \"20px\";\r\n        inputElement.style.width = `${inputElement.scrollWidth}px`;\r\n    }\r\n\r\n    private static getModifiers(args: KeyboardEvent | PointerEvent | WheelEvent | DragEvent): number {\r\n        let modifiers = RawInputModifiers.None;\r\n\r\n        if (args.ctrlKey) { modifiers |= RawInputModifiers.Control; }\r\n        if (args.altKey) { modifiers |= RawInputModifiers.Alt; }\r\n        if (args.shiftKey) { modifiers |= RawInputModifiers.Shift; }\r\n        if (args.metaKey) { modifiers |= RawInputModifiers.Meta; }\r\n\r\n        const buttons = (args as PointerEvent).buttons;\r\n        if (buttons) {\r\n            if (buttons & 1) { modifiers |= RawInputModifiers.LeftMouseButton; }\r\n            if (buttons & 2) { modifiers |= (args.type === \"pen\" ? RawInputModifiers.PenBarrelButton : RawInputModifiers.RightMouseButton); }\r\n            if (buttons & 4) { modifiers |= RawInputModifiers.MiddleMouseButton; }\r\n            if (buttons & 8) { modifiers |= RawInputModifiers.XButton1MouseButton; }\r\n            if (buttons & 16) { modifiers |= RawInputModifiers.XButton2MouseButton; }\r\n            if (buttons & 32) { modifiers |= RawInputModifiers.PenEraser; }\r\n        }\r\n\r\n        return modifiers;\r\n    }\r\n\r\n    public static setPointerCapture(containerElement: HTMLInputElement, pointerId: number): void {\r\n        containerElement.setPointerCapture(pointerId);\r\n    }\r\n\r\n    public static releasePointerCapture(containerElement: HTMLInputElement, pointerId: number): void {\r\n        if (containerElement.hasPointerCapture(pointerId)) {\r\n            containerElement.releasePointerCapture(pointerId);\r\n        }\r\n    }\r\n}\r\n", "export class Caniuse {\r\n    public static hasNativeFilePicker(): boolean {\r\n        return \"showSaveFilePicker\" in globalThis;\r\n    }\r\n\r\n    public static isMobile(): boolean {\r\n        const userAgentData = (globalThis.navigator as any)?.userAgentData;\r\n        if (userAgentData) {\r\n            return userAgentData.mobile;\r\n        }\r\n\r\n        const userAgent = navigator.userAgent;\r\n        const regex1 = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i;\r\n        const regex2 = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw(n|u)|c55\\/|capi|ccwa|cdm|cell|chtm|cldc|cmd|co(mp|nd)|craw|da(it|ll|ng)|dbte|dcs|devi|dica|dmob|do(c|p)o|ds(12|d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(|_)|g1 u|g560|gene|gf5|gmo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd(m|p|t)|hei|hi(pt|ta)|hp( i|ip)|hsc|ht(c(| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i(20|go|ma)|i230|iac( ||\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|[a-w])|libw|lynx|m1w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|mcr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|([1-8]|c))|phil|pire|pl(ay|uc)|pn2|po(ck|rt|se)|prox|psio|ptg|qaa|qc(07|12|21|32|60|[2-7]|i)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h|oo|p)|sdk\\/|se(c(|0|1)|47|mc|nd|ri)|sgh|shar|sie(|m)|sk0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h|v|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl|tdg|tel(i|m)|tim|tmo|to(pl|sh)|ts(70|m|m3|m5)|tx9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas|your|zeto|zte/i;\r\n        return regex1.test(userAgent) || regex2.test(userAgent.substr(0, 4));\r\n    }\r\n\r\n    public static isTv(): boolean {\r\n        return navigator.userAgent.includes(\"SmartTV\");\r\n    }\r\n}\r\n", "export class WebRenderTarget {\r\n    renderTargetType: string;\r\n    constructor(protected canvas: HTMLCanvasElement | OffscreenCanvas, type: string) {\r\n        this.renderTargetType = type;\r\n    }\r\n\r\n    static setSize(target: WebRenderTarget, w: number, h: number) {\r\n        target.canvas.width = w;\r\n        target.canvas.height = h;\r\n    }\r\n}\r\n", "import { BrowserRenderingMode } from \"./renderingMode\";\r\nimport { WebRenderTarget } from \"./webRenderTarget\";\r\ninterface EmscriptenGlContext {\r\n    handle: number;\r\n}\r\n\r\ninterface EmscriptenGL {\r\n    registerContext: (ctx: WebGLRenderingContext, attrs: WebGLContextAttributes) => number;\r\n    currentContext?: EmscriptenGlContext;\r\n    makeContextCurrent: (handle: number) => boolean;\r\n}\r\n\r\nfunction getGL(): EmscriptenGL {\r\n    const self = globalThis as any;\r\n    const module = self.Module ?? self.getDotnetRuntime(0)?.Module;\r\n    return (module?.GL ?? self.AvaloniaGL ?? self.SkiaSharpGL) as EmscriptenGL;\r\n}\r\n\r\nexport class WebGlRenderTarget extends WebRenderTarget {\r\n    public contextHandle?: number;\r\n    public attrs: WebGLContextAttributes;\r\n    public fboId?: number;\r\n    public stencil?: number;\r\n    public sample?: number;\r\n    public depth?: number;\r\n    private static _gl: EmscriptenGL | null = null;\r\n\r\n    constructor(public canvas: HTMLCanvasElement | OffscreenCanvas, mode: BrowserRenderingMode) {\r\n        // Skia only understands WebGL context wrapped in Emscripten.\r\n        if (WebGlRenderTarget._gl == null) { WebGlRenderTarget._gl = getGL(); }\r\n        if (!WebGlRenderTarget._gl) {\r\n            throw new Error(\"Module.GL object wasn't initialized, WebGL can't be used.\");\r\n        }\r\n\r\n        const attrs: WebGLContextAttributes | any =\r\n            {\r\n                alpha: true,\r\n                depth: true,\r\n                stencil: true,\r\n                antialias: false,\r\n                premultipliedAlpha: true,\r\n                preserveDrawingBuffer: false,\r\n                // only supported on older browsers, which is perfect as we want to fallback to 2d there.\r\n                failIfMajorPerformanceCaveat: true,\r\n                // attrs used by Emscripten:\r\n                majorVersion: mode === BrowserRenderingMode.WebGL1 ? 1 : 2,\r\n                minorVersion: 0,\r\n                enableExtensionsByDefault: 1,\r\n                explicitSwapControl: 0\r\n            };\r\n\r\n        const context = (mode === BrowserRenderingMode.WebGL1\r\n            ? canvas.getContext(\"webgl\", attrs)\r\n            : canvas.getContext(\"webgl2\", attrs)) as WebGLRenderingContext;\r\n        if (!context) {\r\n            throw new Error(\"HTMLCanvasElement.getContext returned null.\");\r\n        }\r\n\r\n        const handle = WebGlRenderTarget._gl.registerContext(context, attrs);\r\n        (context as any).gl_handle = handle;\r\n        super(canvas, \"webgl\");\r\n\r\n        this.contextHandle = handle;\r\n        this.fboId = context.getParameter(context.FRAMEBUFFER_BINDING)?.id ?? 0;\r\n        this.stencil = context.getParameter(context.STENCIL_BITS);\r\n        this.sample = context.getParameter(context.SAMPLES);\r\n        this.depth = context.getParameter(context.DEPTH_BITS);\r\n        this.attrs = attrs;\r\n    }\r\n\r\n    public static getCurrentContext(): number {\r\n        return WebGlRenderTarget._gl?.currentContext?.handle ?? 0;\r\n    }\r\n\r\n    public static makeContextCurrent(handle: number): boolean {\r\n        if (WebGlRenderTarget._gl == null) { return false; }\r\n        const ret = WebGlRenderTarget._gl.makeContextCurrent(handle);\r\n        return handle === 0 || ret;\r\n    }\r\n}\r\n", "import { RuntimeAPI } from \"../../../types/dotnet\";\r\nimport { WebRenderTarget } from \"./webRenderTarget\";\r\n\r\nexport class SoftwareRenderTarget extends WebRenderTarget {\r\n    private readonly runtime: RuntimeAPI | undefined;\r\n    private readonly context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\r\n    constructor(canvas: HTMLCanvasElement | OffscreenCanvas) {\r\n        const context = canvas.getContext(\"2d\", {\r\n            alpha: true\r\n        });\r\n        if (!context) {\r\n            throw new Error(\"HTMLCanvasElement.getContext(2d) returned null.\");\r\n        }\r\n\r\n        super(canvas, \"software\");\r\n        this.context = context;\r\n\r\n        this.runtime = globalThis.getDotnetRuntime(0);\r\n    }\r\n\r\n    public putPixelData(pointer: number, length: number, width: number, height: number): void {\r\n        const heap8 = this.runtime?.localHeapViewU8();\r\n\r\n        let clampedBuffer: Uint8ClampedArray;\r\n        if (heap8?.buffer) {\r\n            clampedBuffer = new Uint8ClampedArray(heap8.buffer, pointer, length);\r\n\r\n            // Need to make a copy if using MT, ImageData can't consume shared arrays\r\n            if (this.canvas instanceof OffscreenCanvas) {\r\n                const dstArrayBuffer = new ArrayBuffer(clampedBuffer.byteLength);\r\n                const copy = new Uint8ClampedArray(dstArrayBuffer);\r\n                copy.set(clampedBuffer);\r\n                clampedBuffer = copy;\r\n            }\r\n        } else throw new Error(\"Unable to access .NET memory\");\r\n\r\n        const imageData = new ImageData(clampedBuffer, width, height);\r\n        (this.context).putImageData(imageData, 0, 0);\r\n    }\r\n\r\n    public static staticPutPixelData(target: SoftwareRenderTarget, pointer: number, length: number, width: number, height: number): void {\r\n        target.putPixelData(pointer, length, width, height);\r\n    }\r\n}\r\n", "import { BrowserRenderingMode } from \"./renderingMode\";\r\nimport { WebGlRenderTarget } from \"./webGlRenderTarget\";\r\nimport { WebRenderTarget } from \"./webRenderTarget\";\r\nimport { SoftwareRenderTarget } from \"./softwareRenderTarget\";\r\n\r\nexport class WebRenderTargetRegistry {\r\n    private static targets: { [id: number]: (WebRenderTarget) } = {};\r\n    private static registry: { [id: number]: ({\r\n        canvas: HTMLCanvasElement;\r\n        worker?: Worker;\r\n    }); } = {};\r\n\r\n    private static nextId = 1;\r\n\r\n    static create(pthreadId: number, canvas: HTMLCanvasElement, preferredModes: BrowserRenderingMode[]): number {\r\n        const id = WebRenderTargetRegistry.nextId++;\r\n        if (pthreadId === 0) {\r\n            WebRenderTargetRegistry.registry[id] = {\r\n                canvas\r\n            };\r\n            WebRenderTargetRegistry.targets[id] = WebRenderTargetRegistry.createRenderTarget(canvas, preferredModes);\r\n        } else {\r\n            const self = globalThis as any;\r\n            const module = self.Module ?? self.getDotnetRuntime(0)?.Module;\r\n            const pthreads = module?.PThread;\r\n            if (pthreads == null) { throw new Error(\"Unable to access emscripten PThread api\"); }\r\n            const pthread = pthreads.pthreads[pthreadId];\r\n            if (pthread == null) { throw new Error(`Unable get pthread with id ${pthreadId}`); }\r\n            let worker: Worker | undefined;\r\n            if (pthread.postMessage != null) { worker = pthread as Worker; } else { worker = pthread.worker; }\r\n\r\n            if (worker == null) { throw new Error(`Unable get Worker for pthread ${pthreadId}`); }\r\n            const offscreen = canvas.transferControlToOffscreen();\r\n            worker.postMessage({\r\n                avaloniaCmd: \"registerCanvas\",\r\n                canvas: offscreen,\r\n                modes: preferredModes,\r\n                id\r\n            }, [offscreen]);\r\n            WebRenderTargetRegistry.registry[id] = {\r\n                canvas,\r\n                worker\r\n            };\r\n        }\r\n        return id;\r\n    }\r\n\r\n    static initializeWorker() {\r\n        const oldHandler = self.onmessage;\r\n        self.onmessage = ev => {\r\n            const msg = ev;\r\n            if (msg.data.avaloniaCmd === \"registerCanvas\") {\r\n                WebRenderTargetRegistry.targets[msg.data.id] = WebRenderTargetRegistry.createRenderTarget(msg.data.canvas, msg.data.modes);\r\n            } else if (msg.data.avaloniaCmd === \"unregisterCanvas\") {\r\n                /* eslint-disable */\r\n                // Our keys are _always_ numbers and are safe to delete\r\n                delete WebRenderTargetRegistry.targets[msg.data.id];\r\n                /* eslint-enable */\r\n            } else if (oldHandler != null) { oldHandler.call(self, ev); }\r\n        };\r\n    }\r\n\r\n    static getRenderTarget(id: number): WebRenderTarget | undefined {\r\n        return WebRenderTargetRegistry.targets[id];\r\n    }\r\n\r\n    private static createRenderTarget(canvas: HTMLCanvasElement | OffscreenCanvas, modes: BrowserRenderingMode[]): WebRenderTarget {\r\n        for (const mode of modes) {\r\n            try {\r\n                if (mode === BrowserRenderingMode.Software2D) { return new SoftwareRenderTarget(canvas); }\r\n                return new WebGlRenderTarget(canvas, mode);\r\n            } catch (e) {\r\n                let message = \"\";\r\n                if (e instanceof Error) { message = \": \" + e.message; }\r\n                console.error(`Failed to create render target for mode ${mode} ${message}`);\r\n            }\r\n        }\r\n        // Still try software as a fallback\r\n        return new SoftwareRenderTarget(canvas);\r\n    }\r\n}\r\n", "import { avaloniaDb, fileBookmarksStore } from \"./indexedDb\";\r\nimport { FileSystemFileHandle, FileSystemDirectoryHandle, FileSystemWritableFileStream } from \"native-file-system-adapter\";\r\nimport { Caniuse } from \"../avalonia\";\r\n\r\nexport class StorageItem {\r\n    private constructor(\r\n        public handle?: FileSystemFileHandle | FileSystemDirectoryHandle,\r\n        private readonly file?: File,\r\n        private readonly bookmarkId?: string,\r\n        public wellKnownType?: WellKnownDirectory\r\n    ) {\r\n    }\r\n\r\n    public get name(): string {\r\n        if (this.handle) {\r\n            return this.handle.name;\r\n        }\r\n        if (this.file) {\r\n            return this.file.name;\r\n        }\r\n        return this.wellKnownType ?? \"\";\r\n    }\r\n\r\n    public get kind(): \"file\" | \"directory\" {\r\n        if (this.handle) {\r\n            return this.handle.kind;\r\n        }\r\n        if (this.file) {\r\n            return \"file\";\r\n        }\r\n        return \"directory\";\r\n    }\r\n\r\n    public static createFromHandle(handle: FileSystemFileHandle | FileSystemDirectoryHandle, bookmarkId?: string) {\r\n        return new StorageItem(handle, undefined, bookmarkId, undefined);\r\n    }\r\n\r\n    public static createFromFile(file: File) {\r\n        return new StorageItem(undefined, file, undefined, undefined);\r\n    }\r\n\r\n    public static createWellKnownDirectory(type: WellKnownDirectory) {\r\n        return new StorageItem(undefined, undefined, undefined, type);\r\n    }\r\n\r\n    public static async openRead(item: StorageItem): Promise<Blob> {\r\n        if (item.file) {\r\n            return item.file;\r\n        }\r\n\r\n        if (!item.handle || item.kind !== \"file\") {\r\n            throw new Error(\"StorageItem is not a file\");\r\n        }\r\n\r\n        await item.verityPermissions(\"read\");\r\n\r\n        const file = await (item.handle as FileSystemFileHandle).getFile();\r\n        return file;\r\n    }\r\n\r\n    public static async openWrite(item: StorageItem): Promise<FileSystemWritableFileStream> {\r\n        if (!item.handle || item.kind !== \"file\") {\r\n            throw new Error(\"StorageItem is not a writeable file\");\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await (item.handle as FileSystemFileHandle).createWritable({ keepExistingData: true });\r\n    }\r\n\r\n    public static async getProperties(item: StorageItem): Promise<{ Size: number; LastModified: number; Type: string } | null> {\r\n        // getFile can fail with an exception depending if we use polyfill with a save file dialog or not.\r\n        try {\r\n            const file = item.handle && \"getFile\" in item.handle\r\n                ? await item.handle.getFile()\r\n                : item.file;\r\n\r\n            if (!file) {\r\n                return null;\r\n            }\r\n\r\n            return {\r\n                Size: file.size,\r\n                LastModified: file.lastModified,\r\n                Type: file.type\r\n            };\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static getItemsIterator(item: StorageItem): any | null {\r\n        if (item.kind !== \"directory\" || !item.handle) {\r\n            return null;\r\n        }\r\n\r\n        return (item.handle as any).entries();\r\n    }\r\n\r\n    public static async createFile(item: StorageItem, name: string): Promise<any | null> {\r\n        if (item.kind !== \"directory\" || !item.handle) {\r\n            throw new TypeError(\"Unable to create item in the requested directory\");\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await ((item.handle as any).getFileHandle(name, { create: true }) as Promise<any>);\r\n    }\r\n\r\n    public static async getFile(item: StorageItem, name: string): Promise<any | null> {\r\n        if (item.kind !== \"directory\" || !item.handle) {\r\n            return null;\r\n        }\r\n\r\n        await item.verityPermissions(\"read\");\r\n\r\n        return await ((item.handle as any).getFileHandle(name) as Promise<any>);\r\n    }\r\n\r\n    public static async createFolder(item: StorageItem, name: string): Promise<any | null> {\r\n        if (item.kind !== \"directory\" || !item.handle) {\r\n            throw new TypeError(\"Unable to create item in the requested directory\");\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await ((item.handle as any).getDirectoryHandle(name, { create: true }) as Promise<any>);\r\n    }\r\n\r\n    public static async getFolder(item: StorageItem, name: string): Promise<any | null> {\r\n        if (item.kind !== \"directory\" || !item.handle) {\r\n            return null;\r\n        }\r\n\r\n        await item.verityPermissions(\"read\");\r\n\r\n        return await ((item.handle as any).getDirectoryHandle(name) as Promise<any>);\r\n    }\r\n\r\n    public static async deleteAsync(item: StorageItem): Promise<any | null> {\r\n        if (!item.handle) {\r\n            return null;\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await ((item.handle as any).remove({ recursive: true }) as Promise<any>);\r\n    }\r\n\r\n    public static async moveAsync(item: StorageItem, destination: StorageItem): Promise<any | null> {\r\n        if (!item.handle) {\r\n            return null;\r\n        }\r\n        if (destination.kind !== \"directory\" || !destination.handle) {\r\n            throw new TypeError(\"Unable to move item to the requested directory\");\r\n        }\r\n\r\n        await item.verityPermissions(\"readwrite\");\r\n\r\n        return await ((item.handle as any).move(destination /*, newName */) as Promise<any>);\r\n    }\r\n\r\n    private async verityPermissions(mode: \"read\" | \"readwrite\"): Promise<void | never> {\r\n        if (!this.handle) {\r\n            return;\r\n        }\r\n\r\n        // If we are using polyfill, let it decide permissions by itself, we can't request anything in this case.\r\n        if (!Caniuse.hasNativeFilePicker()) {\r\n            return;\r\n        }\r\n\r\n        if (await this.handle.queryPermission({ mode }) === \"granted\") {\r\n            return;\r\n        }\r\n\r\n        if (await this.handle.requestPermission({ mode }) === \"denied\") {\r\n            throw new Error(\"Permissions denied\");\r\n        }\r\n    }\r\n\r\n    public static async saveBookmark(item: StorageItem): Promise<string | null> {\r\n        // If file was previously bookmarked, just return old one.\r\n        if (item.bookmarkId) {\r\n            return item.bookmarkId;\r\n        }\r\n\r\n        // Bookmarks are not supported with polyfill.\r\n        if (!item.handle || !Caniuse.hasNativeFilePicker()) {\r\n            return null;\r\n        }\r\n\r\n        const connection = await avaloniaDb.connect();\r\n        try {\r\n            const key = await connection.put(fileBookmarksStore, item.handle, item.generateBookmarkId());\r\n            return key as string;\r\n        } finally {\r\n            connection.close();\r\n        }\r\n    }\r\n\r\n    public static async deleteBookmark(item: StorageItem): Promise<void> {\r\n        if (!item.bookmarkId || !Caniuse.hasNativeFilePicker()) {\r\n            return;\r\n        }\r\n\r\n        const connection = await avaloniaDb.connect();\r\n        try {\r\n            await connection.delete(fileBookmarksStore, item.bookmarkId);\r\n        } finally {\r\n            connection.close();\r\n        }\r\n    }\r\n\r\n    private generateBookmarkId(): string {\r\n        return Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n    }\r\n}\r\n\r\nexport class StorageItems {\r\n    constructor(private readonly items: StorageItem[]) { }\r\n\r\n    public static itemsArray(instance: StorageItems): StorageItem[] {\r\n        return instance.items;\r\n    }\r\n\r\n    public static filesToItemsArray(files: File[]): StorageItem[] {\r\n        if (!files) {\r\n            return [];\r\n        }\r\n\r\n        const retItems = [];\r\n        for (let i = 0; i < files.length; i++) {\r\n            retItems[i] = StorageItem.createFromFile(files[i]);\r\n        }\r\n        return retItems;\r\n    }\r\n}\r\n", "/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nconst native = globalThis.showDirectoryPicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nasync function showDirectoryPicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n\n  // Even with this check, the browser may support the attribute, but not the functionality (e.g. iOS Safari)\n  if (!('webkitdirectory' in input)) {\n    throw new Error(`HTMLInputElement.webkitdirectory is not supported`)\n  }\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  input.webkitdirectory = true\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(mod => mod.getDirHandlesFromInput(input))\n}\n\nexport default showDirectoryPicker\nexport { showDirectoryPicker }\n", "/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst def = { accepts: [] }\nconst native = globalThis.showOpenFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.multiple] If you want to allow more than one file\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.accepts] Files you want to accept\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemFileHandle[]>}\n */\nasync function showOpenFilePicker (options = {}) {\n  const opts = { ...def, ...options }\n\n  if (native && !options._preferPolyfill) {\n    return native(opts)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.multiple = opts.multiple\n  input.accept = (opts.accepts || [])\n    .map(e => [\n      ...(e.extensions || []).map(e => '.' + e),\n      ...e.mimeTypes || []]\n    )\n    .flat()\n    .join(',')\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(m => m.getFileHandlesFromInput(input))\n}\n\nexport default showOpenFilePicker\nexport { showOpenFilePicker }\n", "/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst native = globalThis.showSaveFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.types] Files you want to accept\n * @param {string} [options.suggestedName] the name to fall back to when using polyfill\n * @param {string} [options._name] the name to fall back to when using polyfill\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @return {Promise<FileSystemFileHandle>}\n */\nasync function showSaveFilePicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  if (options._name) {\n    console.warn('deprecated _name, spec now have `suggestedName`')\n    options.suggestedName = options._name\n  }\n\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n  const { FileHandle } = await import('./adapters/downloader.js')\n  return new FileSystemFileHandle(new FileHandle(options.suggestedName))\n}\n\nexport default showSaveFilePicker\nexport { showSaveFilePicker }\n", "/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nif (globalThis.DataTransferItem && !DataTransferItem.prototype.getAsFileSystemHandle) {\n  DataTransferItem.prototype.getAsFileSystemHandle = async function () {\n    const entry = this.webkitGetAsEntry()\n    const [\n      { FileHandle, FolderHandle },\n      { FileSystemDirectoryHandle },\n      { FileSystemFileHandle }\n    ] = await Promise.all([\n      import('./adapters/sandbox.js'),\n      import('./FileSystemDirectoryHandle.js'),\n      import('./FileSystemFileHandle.js')\n    ])\n\n    return entry.isFile\n      ? new FileSystemFileHandle(new FileHandle(entry, false))\n      : new FileSystemDirectoryHandle(new FolderHandle(entry, false))\n  }\n}\n\n/**\n * @param {object=} driver\n * @return {Promise<FileSystemDirectoryHandle>}\n */\nasync function getOriginPrivateDirectory (driver, options = {}) {\n  if (!driver) {\n    return globalThis.navigator?.storage?.getDirectory() || globalThis.getOriginPrivateDirectory()\n  }\n  const {FileSystemDirectoryHandle} = await import('./FileSystemDirectoryHandle.js')\n  const module = await driver\n  const sandbox = await (module.default\n    ? module.default(options)\n    : module(options)\n  )\n  return new FileSystemDirectoryHandle(sandbox)\n}\n\nexport default getOriginPrivateDirectory\n", "import showDirectoryPicker from './showDirectoryPicker.js'\nimport showOpenFilePicker from './showOpenFilePicker.js'\nimport showSaveFilePicker from './showSaveFilePicker.js'\nimport getOriginPrivateDirectory from './getOriginPrivateDirectory.js'\nimport FileSystemDirectoryHandle from './FileSystemDirectoryHandle.js'\nimport FileSystemFileHandle from './FileSystemFileHandle.js'\nimport FileSystemHandle from './FileSystemHandle.js'\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\n\nexport {\n  FileSystemDirectoryHandle,\n  FileSystemFileHandle,\n  FileSystemHandle,\n  FileSystemWritableFileStream,\n  getOriginPrivateDirectory,\n  showDirectoryPicker,\n  showOpenFilePicker,\n  showSaveFilePicker\n}\n", "import { avaloniaDb, fileBookmarksStore } from \"./indexedDb\";\r\nimport { StorageItem, StorageItems } from \"./storageItem\";\r\nimport { showOpenFilePicker, showDirectoryPicker, showSaveFilePicker, FileSystemFileHandle } from \"native-file-system-adapter\";\r\n\r\ndeclare global {\r\n    type WellKnownDirectory = \"desktop\" | \"documents\" | \"downloads\" | \"music\" | \"pictures\" | \"videos\";\r\n    interface FilePickerAcceptType {\r\n        description?: string | undefined;\r\n        accept: Record<string, string | string[]>;\r\n    }\r\n}\r\n\r\nexport class StorageProvider {\r\n    public static async selectFolderDialog(\r\n        startIn: StorageItem | null,\r\n        preferPolyfill: boolean): Promise<StorageItem> {\r\n        // 'Picker' API doesn't accept \"null\" as a parameter, so it should be set to undefined.\r\n        const options = {\r\n            startIn: (startIn?.wellKnownType ?? startIn?.handle ?? undefined),\r\n            _preferPolyfill: preferPolyfill\r\n        };\r\n\r\n        const handle = await showDirectoryPicker(options as any);\r\n        return StorageItem.createFromHandle(handle);\r\n    }\r\n\r\n    public static async openFileDialog(\r\n        startIn: StorageItem | null, multiple: boolean,\r\n        types: FilePickerAcceptType[] | null, excludeAcceptAllOption: boolean,\r\n        preferPolyfill: boolean): Promise<StorageItems> {\r\n        const options = {\r\n            startIn: (startIn?.wellKnownType ?? startIn?.handle ?? undefined),\r\n            multiple,\r\n            excludeAcceptAllOption,\r\n            types: (types ?? undefined),\r\n            _preferPolyfill: preferPolyfill\r\n        };\r\n\r\n        const handles = await showOpenFilePicker(options);\r\n        return new StorageItems(handles.map((handle: FileSystemFileHandle) => StorageItem.createFromHandle(handle)));\r\n    }\r\n\r\n    public static async saveFileDialog(\r\n        startIn: StorageItem | null, suggestedName: string | null,\r\n        types: FilePickerAcceptType[] | null, excludeAcceptAllOption: boolean,\r\n        preferPolyfill: boolean): Promise<StorageItem> {\r\n        const options = {\r\n            startIn: (startIn?.wellKnownType ?? startIn?.handle ?? undefined),\r\n            suggestedName: (suggestedName ?? undefined),\r\n            excludeAcceptAllOption,\r\n            types: (types ?? undefined),\r\n            _preferPolyfill: preferPolyfill\r\n        };\r\n\r\n        const handle = await showSaveFilePicker(options);\r\n        return StorageItem.createFromHandle(handle);\r\n    }\r\n\r\n    public static async openBookmark(key: string): Promise<StorageItem | null> {\r\n        const connection = await avaloniaDb.connect();\r\n        try {\r\n            const handle = await connection.get(fileBookmarksStore, key);\r\n            return handle && StorageItem.createFromHandle(handle, key);\r\n        } finally {\r\n            connection.close();\r\n        }\r\n    }\r\n\r\n    public static createAcceptType(description: string, mimeTypes: string[], extensions: string[] | undefined): FilePickerAcceptType {\r\n        const accept: Record<string, string[]> = {};\r\n        mimeTypes.forEach(a => { accept[a] = extensions ?? []; });\r\n        return { description, accept };\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["config", "config_default", "init_config", "__esmMin", "memory_exports", "__export", "FileHandle", "FolderHandle", "Sink", "memory_default", "File", "Blob", "DOMException", "INVALID", "GONE", "MISMATCH", "MOD_ERR", "SYNTAX", "SECURITY", "DISALLOWED", "fs", "init_memory", "__esmMin", "init_util", "init_config", "config_default", "errors", "fileHandle", "file", "chunk", "blob", "head", "tail", "padding", "name", "writable", "opts", "other", "entry", "isFile", "recursive", "x", "sandbox_exports", "__export", "FileHandle", "FolderHandle", "sandbox_default", "DISALLOWED", "Sink", "init_sandbox", "__esmMin", "init_util", "errors", "writer", "fileEntry", "chunk", "resolve", "reject", "evt", "file", "writable", "other", "opts", "fileWriter", "dir", "reader", "entries", "x", "name", "entry", "err", "e", "kAdapter", "_a", "FileSystemHandle", "FileSystemHandle_default", "init_FileSystemHandle", "__esmMin", "adapter", "__publicField", "mode", "handle", "options", "other", "WritableStream", "FileSystemWritableFileStream", "FileSystemWritableFileStream_default", "init_FileSystemWritableFileStream", "__esmMin", "init_config", "config_default", "args", "w", "p", "position", "size", "data", "writer", "FileSystemFileHandle_exports", "__export", "FileSystemFileHandle", "FileSystemFileHandle_default", "kAdapter", "_a", "init_FileSystemFileHandle", "__esmMin", "init_FileSystemHandle", "init_FileSystemWritableFileStream", "FileSystemHandle_default", "adapter", "__publicField", "options", "FileSystemWritableFileStream_default", "FileSystemDirectoryHandle_exports", "__export", "FileSystemDirectoryHandle", "FileSystemDirectoryHandle_default", "kAdapter", "_a", "init_FileSystemDirectoryHandle", "__esmMin", "init_FileSystemHandle", "FileSystemHandle_default", "adapter", "__publicField", "name", "options", "handle", "FileSystemFileHandle", "_", "entry", "possibleDescendant", "openSet", "current", "path", "util_exports", "__export", "config", "errors", "fromDataTransfer", "getDirHandlesFromInput", "getFileHandlesFromInput", "entries", "memory", "sandbox", "fs", "folder", "entry", "input", "FolderHandle", "FileHandle", "FileSystemDirectoryHandle", "files", "rootName", "root", "file", "path", "name", "dir", "FileSystemFileHandle", "init_util", "__esmMin", "m", "downloader_exports", "__export", "FileHandle", "WritableStream", "TransformStream", "DOMException", "Blob", "GONE", "isSafari", "WRITE", "PULL", "ERROR", "ABORT", "CLOSE", "MessagePortSink", "RemoteWritableStream", "init_downloader", "__esmMin", "init_util", "init_config", "config_default", "errors", "name", "other", "options", "_a", "sw", "link", "ts", "sink", "chunks", "chunk", "blob", "writable", "readablePort", "fileName", "headers", "keepAlive", "ctrl", "reader", "pump", "_", "e", "iframe", "port", "event", "controller", "message", "reason", "resolve", "reject", "channel", "InnerDbConnection", "database", "store", "mode", "obj", "key", "os", "resolve", "reject", "response", "IndexedDbWrapper", "databaseName", "objectStores", "conn", "event", "db", "fileBookmarksStore", "avaloniaDb", "CaretHelper", "element", "position", "options", "_a", "_b", "isBrowser", "debug", "el", "div", "style", "computed", "isInput", "properties", "prop", "height", "outerHeight", "targetHeight", "isFirefox", "span", "coordinates", "JsExports", "_a", "resolveExports", "runtimeApi", "InputHelper", "args", "items", "item", "dataTransfer", "dataTransferList", "format", "source", "value", "bytes", "window", "clipboard", "resolve", "reject", "_a", "clipboardItem", "blob", "dataTransferItem", "stringValue", "str", "file", "StorageItem", "element", "topLevelId", "keySub", "pointerSub", "textSub", "dndSub", "paneSub", "keyDownHandler", "JsExports", "handled", "keyUpHandler", "compositionStartHandler", "beforeInputHandler", "ranges", "start", "end", "compositionUpdateHandler", "compositionEndHandler", "pointerMoveHandler", "pointerDownHandler", "pointerUpHandler", "pointerCancelHandler", "wheelHandler", "handler", "overAndDropHandler", "pointerEvent", "e", "listener", "event", "elementRect", "keyboardRect", "inputElement", "kind", "x", "y", "caretWidth", "caretHeight", "caret", "left", "top", "CaretHelper", "text", "modifiers", "buttons", "containerElement", "pointerId", "Caniuse", "_a", "userAgentData", "userAgent", "regex1", "regex2", "WebRenderTarget", "canvas", "type", "target", "w", "h", "getGL", "_a", "_b", "_c", "_d", "self", "module", "_WebGlRenderTarget", "WebRenderTarget", "canvas", "mode", "attrs", "context", "handle", "ret", "WebGlRenderTarget", "SoftwareRenderTarget", "WebRenderTarget", "canvas", "context", "pointer", "length", "width", "height", "_a", "heap8", "clampedBuffer", "dstArrayBuffer", "copy", "imageData", "target", "_WebRenderTargetRegistry", "pthreadId", "canvas", "preferredModes", "_a", "_b", "id", "self", "module", "pthreads", "pthread", "worker", "offscreen", "oldHandler", "ev", "msg", "modes", "mode", "SoftwareRenderTarget", "WebGlRenderTarget", "e", "message", "WebRenderTargetRegistry", "StorageItem", "handle", "file", "bookmarkId", "wellKnownType", "_a", "type", "item", "name", "destination", "mode", "Caniuse", "connection", "avaloniaDb", "fileBookmarksStore", "StorageItems", "items", "instance", "files", "retItems", "i", "native", "showDirectoryPicker", "options", "input", "p", "resolve", "mod", "showDirectoryPicker_default", "def", "native", "showOpenFilePicker", "options", "opts", "input", "e", "p", "resolve", "m", "showOpenFilePicker_default", "native", "showSaveFilePicker", "options", "FileSystemFileHandle", "FileHandle", "showSaveFilePicker_default", "entry", "FileHandle", "FolderHandle", "FileSystemDirectoryHandle", "FileSystemFileHandle", "init_FileSystemDirectoryHandle", "init_FileSystemFileHandle", "init_FileSystemHandle", "init_FileSystemWritableFileStream", "StorageProvider", "startIn", "preferPolyfill", "_a", "_b", "options", "handle", "showDirectoryPicker_default", "StorageItem", "multiple", "types", "excludeAcceptAllOption", "handles", "showOpenFilePicker_default", "StorageItems", "suggestedName", "showSaveFilePicker_default", "key", "connection", "avaloniaDb", "fileBookmarksStore", "description", "mimeTypes", "extensions", "accept", "a"]
}
